---
import BaseLayout from "../layouts/BaseLayout.astro";
import WeeklySchedule from "../components/schedule/WeeklySchedule.astro";
import ImportantDates from "../components/schedule/ImportantDates.astro";
import { COURSE_CONFIG, type WeekContent } from "../config/course";

// Get semester start date from the first important date
const semesterStart = new Date(COURSE_CONFIG.importantDates[0].date);

// Generate weekly schedule from modules
const weeklySchedule: WeekContent[] = COURSE_CONFIG.modules
  .flatMap((module) => [...module.content])
  .sort((a, b) => a.week - b.week);

type ImportantDate = {
  event: string;
  date: string;
  type: "lab" | "milestone";
};

// Important dates combining lab deadlines and course milestones
const importantDates: ImportantDate[] = [
  ...COURSE_CONFIG.modules
    .flatMap((module) => [...module.content])
    .filter(
      (week): week is WeekContent & { lab: NonNullable<WeekContent["lab"]> } =>
        week.lab !== null,
    )
    .map((week) => ({
      event: `Entrega: ${week.lab.title}`,
      date: week.lab.dueDate,
      type: "lab" as const,
    })),
  ...COURSE_CONFIG.importantDates.map((date) => ({
    ...date,
    type: "milestone" as const,
  })),
].sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());
---

<BaseLayout title="Cronograma">
  <div class="space-y-4 dark:bg-zinc-900">
    <h1 class="text-3xl font-bold text-zinc-900 dark:text-white">Cronograma</h1>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <div class="lg:col-span-2">
        <WeeklySchedule schedule={weeklySchedule} />
      </div>
      <div>
        <ImportantDates dates={importantDates} />
      </div>
    </div>
  </div>
</BaseLayout>
