---
import { COURSE_CONFIG } from '../../config/course';
import { 
  FileText,
  Calendar,
  Beaker,
  BookOpen,
  Rocket,
  Users,
  ChevronDown,
  Github,
  Menu,
  Home,
  X
} from 'lucide-astro';

const currentPath = Astro.url.pathname;

const mainNavigation = [
  { href: '/', text: 'Inicio', icon: Home },
  { href: '/syllabus', text: 'Sílabo', icon: FileText },
  { href: '/schedule', text: 'Cronograma', icon: Calendar },
  { href: '/labs', text: 'Laboratorios', icon: Beaker },
  { href: '/resources', text: 'Recursos', icon: BookOpen },
  { href: '/project', text: 'Proyecto', icon: Rocket },
  { href: '/staff', text: 'Equipo', icon: Users },
];

const modules = COURSE_CONFIG.modules.map(module => ({
  id: module.id,
  title: module.title,
  labs: module.labs.map(lab => ({
    id: lab.id,
    title: lab.title,
    href: `/labs/${module.id}/${lab.id}`,
    dueDate: lab.dueDate
  }))
}));
---

<aside 
  class="fixed inset-y-0 left-0 z-40 w-64 bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 transform transition-transform duration-300 ease-in-out -translate-x-full lg:translate-x-0" 
  id="sidebar"
>
  <div class="flex flex-col h-full">
    <div class="flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700">
      <a href="/" class="flex items-center space-x-2">
        <span class="text-xl font-mono font-bold text-gray-900 dark:text-white">
          {COURSE_CONFIG.code}
        </span>
      </a>
      <button 
        type="button"
        class="lg:hidden p-2 rounded-md text-gray-500 hover:text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:hover:text-gray-300 dark:hover:bg-gray-700"
        id="sidebar-close"
        aria-label="Close sidebar"
      >
        <X class="w-6 h-6" />
      </button>
    </div>

    <div class="flex-1 overflow-y-auto">
      <nav class="py-4 px-2 space-y-1">
        {mainNavigation.map(({ href, text, icon: Icon }) => (
          <a
            href={href}
            class:list={[
              "flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors",
              currentPath === href
                ? "bg-blue-50 text-blue-700 dark:bg-blue-900/50 dark:text-blue-200"
                : "text-gray-700 hover:bg-gray-50 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-white"
            ]}
          >
            <Icon class="w-5 h-5 mr-3" />
            {text}
          </a>
        ))}
      </nav>

      <div class="py-4 px-2">
        <h2 class="px-3 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider">
          Módulos
        </h2>
        <div class="mt-2 space-y-1">
          {modules.map(module => (
            <div class="module-section">
              <button
                class="w-full cursor-pointer flex items-center justify-between px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 rounded-md"
                data-module-trigger={module.id}
              >
                <span class="truncate">{module.title}</span>
                <ChevronDown class="w-4 h-4 transform transition-transform" />
              </button>
              <div 
                class="hidden pl-4 mt-1 space-y-1"
                data-module-content={module.id}
              >
                {module.labs.map(lab => (
                  <a
                    href={lab.href}
                    class:list={[
                      "flex items-center px-3 py-2 text-sm rounded-md transition-colors",
                      currentPath === lab.href
                        ? "text-blue-700 bg-blue-50 dark:text-blue-200 dark:bg-blue-900/50"
                        : "text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-400 dark:hover:text-gray-300 dark:hover:bg-gray-700"
                    ]}
                  >
                    <span class="truncate">{lab.title}</span>
                  </a>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>

    <div class="flex-shrink-0 p-4 border-t border-gray-200 dark:border-gray-700">
      <div class="flex items-center">
        <img
          src="/logo-unmsm.webp"
          alt="UNMSM Logo"
          class="h-8 w-8"
        />
        <div class="ml-3">
          <p class="text-sm font-medium text-gray-700 dark:text-gray-300">
            {COURSE_CONFIG.semester}
          </p>
          <a
            href={COURSE_CONFIG.repository.url}
            class="text-xs text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 flex items-center"
            target="_blank"
            rel="noopener noreferrer"
          >
            <Github class="w-4 h-4 mr-1" />
            Ver en GitHub
          </a>
        </div>
      </div>
    </div>
  </div>
</aside>

<div 
  class="fixed inset-0 bg-gray-900/50 z-30 hidden transition-opacity duration-300 ease-in-out lg:hidden" 
  id="sidebar-overlay"
  aria-hidden="true"
></div>

<script>
  const sidebar = document.getElementById('sidebar');
  const sidebarOverlay = document.getElementById('sidebar-overlay');
  const sidebarClose = document.getElementById('sidebar-close');
  const moduleTriggers = document.querySelectorAll('[data-module-trigger]');

  function toggleSidebar(show: boolean) {
    if (sidebar && sidebarOverlay) {
      sidebar.classList.toggle('-translate-x-full', !show);
      sidebarOverlay.classList.toggle('hidden', !show);
      document.body.style.overflow = show && window.innerWidth < 1024 ? 'hidden' : '';
      
      document.dispatchEvent(new CustomEvent('sidebarToggle', { 
        detail: { isOpen: show } 
      }));
    }
  }

  // Module accordion functionality
  moduleTriggers.forEach(trigger => {
    trigger.addEventListener('click', () => {
      const moduleId = trigger.getAttribute('data-module-trigger');
      const content = document.querySelector(`[data-module-content="${moduleId}"]`);
      const icon = trigger.querySelector('svg');
      
      if (content && icon) {
        content.classList.toggle('hidden');
        icon.classList.toggle('rotate-180');
      }
    });
  });

  // Sidebar toggle handlers
  document.getElementById('sidebar-toggle')?.addEventListener('click', () => toggleSidebar(true));
  sidebarClose?.addEventListener('click', () => toggleSidebar(false));
  sidebarOverlay?.addEventListener('click', () => toggleSidebar(false));

  // Handle window resize
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 1024) {
      toggleSidebar(true);
    }
  });

  // Handle navigation
  document.addEventListener('astro:after-navigation', () => {
    if (window.innerWidth < 1024) {
      toggleSidebar(false);
    }
  });

  // Initial state
  if (window.innerWidth >= 1024) {
    toggleSidebar(true);
  }
</script>
